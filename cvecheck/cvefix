CVE-2021-3449:
 ssl/statem/extensions.c:
  include:
   - "static int init_sig_algs_cert(SSL *s, unsigned int context)"
   - "OPENSSL_free(s->s3->tmp.peer_cert_sigalgs);"
   - "s->s3->tmp.peer_cert_sigalgs = NULL;"
   - "s->s3->tmp.peer_sigalgslen = 0;"
CVE-2020-1967:
 ssl/t1_lib.c:
  include:
   - "if (sigalg != NULL && sig_nid == sigalg->sigandhash)"
  exclude:
   - "if (sig_nid == sigalg->sigandhash)"
CVE-2020-1971:
 crypto/x509v3/v3_genn.c:
  include:
   - "static int edipartyname_cmp(const EDIPARTYNAME *a, const EDIPARTYNAME *b)"
   - "result = edipartyname_cmp(a->d.ediPartyName, b->d.ediPartyName);"
CVE-2021-3450:
 crypto/x509/x509_vfy.c:
  include:
   - "static int check_chain_extensions(X509_STORE_CTX *ctx)"
   - "&& (ctx->param->flags & X509_V_FLAG_X509_STRICT) && num > 1) {"
   - "&& (x->ex_flags & EXFLAG_CA) == 0"
CVE-2021-3711:
 crypto/sm2/sm2_crypt.c:
  include:
   - "int sm2_plaintext_size(const unsigned char *ct, size_t ct_size, size_t *pt_size)"
   - "sm2_ctext = d2i_SM2_Ciphertext(NULL, &ct, ct_size);"
   - "*pt_size = sm2_ctext->C2->length;"
  exclude:
   - "int sm2_plaintext_size(const EC_KEY *key, const EVP_MD *digest, size_t msg_len,"
CVE-2014-0160:
 ssl/d1_both.c:
  include:
   - "/* Read type and payload length first */"
   - "if (1 + 2 + payload + 16 > s->s3->rrec.length)"
   - "return 0; /* silently discard per RFC 6520 sec. 4 */"
   - "if (write_length > SSL3_RT_MAX_PLAIN_LENGTH)"
   - "r = dtls1_write_bytes(s, TLS1_RT_HEARTBEAT, buffer, write_length);"
 ssl/t1_lib.c:
  include:
   - "/* Read type and payload length first */"
   - "if (1 + 2 + 16 > s->s3->rrec.length)"
   - "if (1 + 2 + payload + 16 > s->s3->rrec.length)"
   - "return 0; /* silently discard per RFC 6520 sec. 4 */"
CVE-2022-0778:
 crypto/bn/bn_sqrt.c:
  include:
   - "BIGNUM *BN_mod_sqrt(BIGNUM *in, const BIGNUM *a, const BIGNUM *p, BN_CTX *ctx)"
   - "/* Find the smallest i, 0 < i < e, such that b^(2^i) = 1. */"
